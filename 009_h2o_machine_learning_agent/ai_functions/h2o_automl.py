# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: h2o_ml_agent
# Time Created: 2025-01-17 10:37:00

def h2o_automl(data_raw):
    import h2o
    from h2o.automl import H2OAutoML
    import pandas as pd



    # Initialize or connect to H2O if not already started
    h2o.init()

    # Convert the pandas DataFrame to an H2OFrame
    data_h2o = h2o.H2OFrame(data_raw)

    # Identify the target variable
    target = "Churn"
    x = [col for col in data_h2o.columns if col != target]

    # Use advanced parameters based on user instructions and recommended steps
    aml = H2OAutoML(
        max_runtime_secs=30,  # user specified max runtime
        seed=42,
        nfolds=5,  # cross-validation
        balance_classes=True,  # handle class imbalance
        sort_metric="AUC",  # metric for sorting models
        stopping_metric="logloss",  # stopping criteria
        stopping_rounds=5,  # number of rounds to wait before stopping
        exclude_algos=["DeepLearning"],  # exclude deep learning algorithms
        keep_cross_validation_predictions=True  # keep CV predictions for analysis
    )
    
    # Train the AutoML model
    aml.train(x=x, y=target, training_frame=data_h2o)

    # Determine model saving logic
    model_directory = "/Users/mdancho/Desktop/course_code/free-ai-tips/009_h2o_machine_learning_agent/h2o_models/"
    log_path = "/Users/mdancho/Desktop/course_code/free-ai-tips/009_h2o_machine_learning_agent/ai_functions/"

    if model_directory is None and log_path is None:
        model_path = None
    else:
        path_to_save = model_directory if model_directory is not None else log_path
        model_path = h2o.save_model(model=aml.leader, path=path_to_save, force=True)

    return dict(
        leaderboard=h2o.automl.get_leaderboard(aml, extra_columns="ALL").as_data_frame().to_dict(),
        best_model_id=aml.leader.model_id,
        model_path=model_path,
    )